{"version":3,"sources":["../../../src/plugins/StatusBar/index.js"],"names":["Plugin","require","Translator","StatusBarUI","getSpeed","getBytesRemaining","prettyETA","prettyBytes","module","exports","uppy","opts","id","title","type","defaultLocale","strings","uploading","uploadComplete","uploadFailed","pleasePressRetry","paused","error","retry","pressToRetry","retryUpload","resumeUpload","cancelUpload","pauseUpload","uploadXFiles","uploadXNewFiles","defaultOptions","target","hideUploadButton","showProgressDetails","locale","translator","i18n","translate","bind","render","install","getTotalSpeed","files","totalSpeed","forEach","file","progress","getTotalETA","totalBytesRemaining","reduce","total","Math","round","state","uploadStartedFiles","Object","keys","filter","uploadStarted","newFiles","completeFiles","erroredFiles","inProgressFiles","isPaused","processingFiles","preprocess","postprocess","inProgressFilesArray","push","totalETA","totalSize","totalUploadedSize","bytesTotal","bytesUploaded","isUploadStarted","length","isAllComplete","totalProgress","isAllErrored","isAllPaused","resumableUploads","getState","capabilities","pauseAll","resumeAll","retryAll","cancelAll","startUpload","upload","complete","inProgress","mount","uninstall","unmount"],"mappings":"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","file":"index.js","sourcesContent":["const Plugin = require('../../core/Plugin')\nconst Translator = require('../../core/Translator')\nconst StatusBarUI = require('./StatusBar')\nconst { getSpeed } = require('../../core/Utils')\nconst { getBytesRemaining } = require('../../core/Utils')\nconst { prettyETA } = require('../../core/Utils')\nconst prettyBytes = require('prettier-bytes')\n\n/**\n * A status bar.\n */\nmodule.exports = class StatusBar extends Plugin {\n  constructor (uppy, opts) {\n    super(uppy, opts)\n    this.id = this.opts.id || 'StatusBar'\n    this.title = 'StatusBar'\n    this.type = 'progressindicator'\n\n    const defaultLocale = {\n      strings: {\n        uploading: 'Uploading',\n        uploadComplete: 'Upload complete',\n        uploadFailed: 'Upload failed',\n        pleasePressRetry: 'Please press Retry to upload again',\n        paused: 'Paused',\n        error: 'Error',\n        retry: 'Retry',\n        pressToRetry: 'Press to retry',\n        retryUpload: 'Retry upload',\n        resumeUpload: 'Resume upload',\n        cancelUpload: 'Cancel upload',\n        pauseUpload: 'Pause upload',\n        uploadXFiles: {\n          0: 'Upload %{smart_count} file',\n          1: 'Upload %{smart_count} files'\n        },\n        uploadXNewFiles: {\n          0: 'Upload +%{smart_count} file',\n          1: 'Upload +%{smart_count} files'\n        }\n      }\n    }\n\n    // set default options\n    const defaultOptions = {\n      target: 'body',\n      hideUploadButton: false,\n      showProgressDetails: false,\n      locale: defaultLocale\n    }\n\n    // merge default options with the ones set by user\n    this.opts = Object.assign({}, defaultOptions, opts)\n\n    this.locale = Object.assign({}, defaultLocale, this.opts.locale)\n    this.locale.strings = Object.assign({}, defaultLocale.strings, this.opts.locale.strings)\n\n    this.translator = new Translator({locale: this.locale})\n    this.i18n = this.translator.translate.bind(this.translator)\n\n    this.render = this.render.bind(this)\n    this.install = this.install.bind(this)\n  }\n\n  getTotalSpeed (files) {\n    let totalSpeed = 0\n    files.forEach((file) => {\n      totalSpeed = totalSpeed + getSpeed(file.progress)\n    })\n    return totalSpeed\n  }\n\n  getTotalETA (files) {\n    const totalSpeed = this.getTotalSpeed(files)\n    if (totalSpeed === 0) {\n      return 0\n    }\n\n    const totalBytesRemaining = files.reduce((total, file) => {\n      return total + getBytesRemaining(file.progress)\n    }, 0)\n\n    return Math.round(totalBytesRemaining / totalSpeed * 10) / 10\n  }\n\n  render (state) {\n    const files = state.files\n\n    const uploadStartedFiles = Object.keys(files).filter((file) => {\n      return files[file].progress.uploadStarted\n    })\n    const newFiles = Object.keys(files).filter((file) => {\n      return !files[file].progress.uploadStarted\n    })\n    const completeFiles = Object.keys(files).filter((file) => {\n      return files[file].progress.uploadComplete\n    })\n    const erroredFiles = Object.keys(files).filter((file) => {\n      return files[file].error\n    })\n    const inProgressFiles = Object.keys(files).filter((file) => {\n      return !files[file].progress.uploadComplete &&\n             files[file].progress.uploadStarted &&\n             !files[file].isPaused\n    })\n    const processingFiles = Object.keys(files).filter((file) => {\n      return files[file].progress.preprocess || files[file].progress.postprocess\n    })\n\n    let inProgressFilesArray = []\n    inProgressFiles.forEach((file) => {\n      inProgressFilesArray.push(files[file])\n    })\n\n    const totalSpeed = prettyBytes(this.getTotalSpeed(inProgressFilesArray))\n    const totalETA = prettyETA(this.getTotalETA(inProgressFilesArray))\n\n    // total size and uploaded size\n    let totalSize = 0\n    let totalUploadedSize = 0\n    inProgressFilesArray.forEach((file) => {\n      totalSize = totalSize + (file.progress.bytesTotal || 0)\n      totalUploadedSize = totalUploadedSize + (file.progress.bytesUploaded || 0)\n    })\n    totalSize = prettyBytes(totalSize)\n    totalUploadedSize = prettyBytes(totalUploadedSize)\n\n    const isUploadStarted = uploadStartedFiles.length > 0\n\n    const isAllComplete = state.totalProgress === 100 &&\n      completeFiles.length === Object.keys(files).length &&\n      processingFiles.length === 0\n\n    const isAllErrored = isUploadStarted &&\n      erroredFiles.length === uploadStartedFiles.length\n\n    const isAllPaused = inProgressFiles.length === 0 &&\n      !isAllComplete &&\n      !isAllErrored &&\n      uploadStartedFiles.length > 0\n\n    const resumableUploads = this.uppy.getState().capabilities.resumableUploads || false\n\n    return StatusBarUI({\n      error: state.error,\n      totalProgress: state.totalProgress,\n      totalSize: totalSize,\n      totalUploadedSize: totalUploadedSize,\n      uploadStartedFiles: uploadStartedFiles,\n      isAllComplete: isAllComplete,\n      isAllPaused: isAllPaused,\n      isAllErrored: isAllErrored,\n      isUploadStarted: isUploadStarted,\n      i18n: this.i18n,\n      pauseAll: this.uppy.pauseAll,\n      resumeAll: this.uppy.resumeAll,\n      retryAll: this.uppy.retryAll,\n      cancelAll: this.uppy.cancelAll,\n      startUpload: this.uppy.upload,\n      complete: completeFiles.length,\n      newFiles: newFiles.length,\n      inProgress: uploadStartedFiles.length,\n      totalSpeed: totalSpeed,\n      totalETA: totalETA,\n      files: state.files,\n      resumableUploads: resumableUploads,\n      hideUploadButton: this.opts.hideUploadButton\n    })\n  }\n\n  install () {\n    const target = this.opts.target\n    if (target) {\n      this.mount(target, this)\n    }\n  }\n\n  uninstall () {\n    this.unmount()\n  }\n}\n"]}